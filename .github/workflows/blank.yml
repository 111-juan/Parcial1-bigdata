# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
     - uses: actions/checkout@v4
     - uses: actions/setup-python@v5
       with:
         python-version: '3.11' 
      # Runs a set of commands using the runners shell
     - name: Install python requirements.txt
       run: |
          python -m venv env
          source env/bin/activate
          pip install -r requirements.txt

     - name: Execute python tests
       run: |
          source env/bin/activate
          pytest
          
     - name: Configure AWS Credentials
       uses: aws-actions/configure-aws-credentials@v4
       with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
            aws-region: us-east-1
       
     - name: Deploy or update zappa
       run: |
          source env/bin/activate
          if zappa status dev; then
            zappa update dev
          else
            zappa deploy dev
          fi
     - name: Inject env vars into Zappa settings
       run: |
          jq '.punto2.environment_variables.DB_HOST="${{ secrets.DB_HOST }}" |
          .punto2.environment_variables.DB_USER="${{ secrets.DB_USER }}" |
          .punto2.environment_variables.DB_PASS="${{ secrets.DB_PASS }}" |
          .punto2.environment_variables.DB_NAME="${{ secrets.DB_NAME }}" |
          .punto2.environment_variables.TABLE_NAME="dolar_trm"' \
          zappa_settings.json > zappa_settings_tmp.json
          mv zappa_settings_tmp.json zappa_settings.json


      
     - name: Deploy or update zappa BaseDeDatos
       run: |
          source env/bin/activate
          if zappa status punto2; then
            zappa update punto2
          else
            zappa deploy punto2
          fi